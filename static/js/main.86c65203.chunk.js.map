{"version":3,"sources":["App.module.css","components/Toggles/Toggles.module.css","redux/action.js","components/Boxmodel/RecordGen.jsx","components/spinner/spinner.jsx","components/Boxmodel/Boxmodel.jsx","components/Form/QualificationGen.jsx","components/Form/Form.jsx","components/Toggles/Toggles.jsx","components/titlebar/Titlebar.jsx","App.js","reportWebVitals.js","redux/reducer.js","redux/store.js","index.js","components/titlebar/titlebar.module.css","components/Boxmodel/Boxmodel.module.css"],"names":["module","exports","server","QualGen","qual","line","counter","className","BoxmodelCss","style","borderTop","RecordGen","user","toggleForm","dispatch","useDispatch","triggerDelete","window","confirm","toast","loading","type","fetch","method","headers","body","JSON","stringify","then","res","json","payload","success","data","fm","x","length","push","qualification","y","fm_id","catch","err","error","location","reload","info","message","deleteUser","triggerEdit","oldUser","console","log","fm_name","fm_address","fm_designation","fm_salary","map","j","degree_tittle","year_of_passing","institute_attended","btn","onClick","Spinner","Boxmodel","users","isLoading","i","QualificationGen","handleQual","index","handleRemoved","q_id","color","htmlFor","id","name","placeholder","value","onChange","e","required","initialQual","initialState","removedItem","Form","props","handleChange","event","setState","state","target","update","$set","String","parseInt","handleSubmit","preventDefault","updateUser","addUser","cancelUpdate","toggleDatabase","addCounter","prevState","array","splice","this","onSubmit","React","Component","connect","Toggles","form","database","TogglesCss","toggles","background","TitleBar","searchValue","onSearchChange","clearSearchValue","TitleBarCss","titlebar","searchBox_fakeInput","searchBox_inputWrapper","form_control","searchBox_input","js_searchBox_input","searchBox_clearWrapper","display","searchBox_clear","js_clearSearchBox","tooltip","tooltiptext","App","getUser","filteredUsers","filter","toLowerCase","includes","AppCss","container","container2","userReducer","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialUserState","rootReducers","combineReducers","action","Object","assign","logger","createLogger","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.86c65203.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__316XG\",\"container\":\"App_container__J3Nd6\",\"container2\":\"App_container2__37H6g\",\"toggles\":\"App_toggles__35AY9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"toggles\":\"Toggles_toggles__1E8CO\"};","import toast from 'cogo-toast'\r\nconst server = 'https://react-php-crud.herokuapp.com/'\r\n// const server = './php-files/'\r\nexport const getUser = () => (dispatch) => {\r\n  toast.loading('Connecting to database ...')\r\n  dispatch({ type: 'FETCH_USER_START' })\r\n  fetch(`${server}get_users.php`)\r\n    .then((data) => data.json())\r\n    .then((data) => {\r\n      let fm = []\r\n      for (let x = 0; x < data.fm.length; x++) {\r\n        fm.push({ ...data.fm[x], qualification: [] })\r\n        for (let y = 0; y < data.qual.length; y++) {\r\n          if (data.fm[x].fm_id === data.qual[y].fm_id)\r\n            fm[x].qualification.push(data.qual[y])\r\n        }\r\n      }\r\n      dispatch({\r\n        type: 'FETCH_USER_SUCCESS',\r\n        payload: fm,\r\n      })\r\n      toast.success('Database Connected')\r\n    })\r\n    .catch((err) => {\r\n      dispatch({ type: 'FETCH_USER_FAILED', payload: err })\r\n      toast.error('Database Connecting Failed')\r\n      toast.info(err.message, 5000)\r\n    })\r\n}\r\nexport const addUser = (user) => (dispatch) => {\r\n  toast.loading('Adding information in database ...')\r\n  dispatch({ type: 'ADD_USER_IN_DB_START' })\r\n  fetch(`${server}add_user.php`, {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify(user),\r\n  })\r\n    .then((res) => res.json())\r\n    .then((res) => {\r\n      toast.success('Successfully added in Database')\r\n      dispatch({ type: 'ADD_USER_IN_DB_SUCCESS', payload: res })\r\n      fetch(`${server}get_users.php`)\r\n        .then((data) => data.json())\r\n        .then((data) => {\r\n          let fm = []\r\n          for (let x = 0; x < data.fm.length; x++) {\r\n            fm.push({ ...data.fm[x], qualification: [] })\r\n            for (let y = 0; y < data.qual.length; y++) {\r\n              if (data.fm[x].fm_id === data.qual[y].fm_id)\r\n                fm[x].qualification.push(data.qual[y])\r\n            }\r\n          }\r\n          dispatch({\r\n            type: 'FETCH_USER_SUCCESS',\r\n            payload: fm,\r\n          })\r\n        })\r\n        .catch((err) => {\r\n          dispatch({ type: 'FETCH_USER_FAILED', payload: err })\r\n          toast.error('Auto Fetching Failed. Refreshing Page...')\r\n          window.location.reload()\r\n        })\r\n    })\r\n    .catch((err) => {\r\n      dispatch({ type: 'ADD_USER_IN_DB_FAILED', payload: err })\r\n      toast.error('Adding Data Failed')\r\n      toast.info(err.message, 20)\r\n    })\r\n}\r\nexport const deleteUser = (user) => (dispatch) => {\r\n  toast.loading('Deleting information from database...')\r\n  dispatch({ type: 'DELETE_USER' })\r\n  fetch(`${server}delete_user.php`, {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify(user),\r\n  })\r\n    .then((res) => res.json())\r\n    .then((res) => {\r\n      dispatch({ type: 'DELETE_USER_SUCCESS', payload: res })\r\n      toast.success('Successfully Deleted')\r\n      dispatch({ type: 'FETCH_USER_START' })\r\n      fetch(`${server}get_users.php`)\r\n        .then((data) => data.json())\r\n        .then((data) => {\r\n          let fm = []\r\n          for (let x = 0; x < data.fm.length; x++) {\r\n            fm.push({ ...data.fm[x], qualification: [] })\r\n            for (let y = 0; y < data.qual.length; y++) {\r\n              if (data.fm[x].fm_id === data.qual[y].fm_id)\r\n                fm[x].qualification.push(data.qual[y])\r\n            }\r\n          }\r\n          dispatch({\r\n            type: 'FETCH_USER_SUCCESS',\r\n            payload: fm,\r\n          })\r\n        })\r\n        .catch((err) => {\r\n          dispatch({ type: 'FETCH_USER_FAILED', payload: err })\r\n          toast.error('Auto Fetching Failed. Refreshing Now...')\r\n          window.location.reload()\r\n        })\r\n    })\r\n    .catch((err) => {\r\n      toast.error('Deleting User Failed')\r\n      toast.info(err.message)\r\n      dispatch({ type: 'DELETE_USER_FAILED', payload: err })\r\n    })\r\n}\r\nexport const oldUser = (oldUser) => {\r\n  console.log(oldUser)\r\n  return { type: 'EDIT_USER', payload: oldUser }\r\n}\r\nexport const updateUser = (payload) => (dispatch) => {\r\n  toast.loading('Updating informtion in database...')\r\n  dispatch({ type: 'UPDATE_USER_START' })\r\n  fetch(`${server}update_user.php`, {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify(payload),\r\n  })\r\n    .then((res) => res.json())\r\n    .then((res) => {\r\n      console.log(res)\r\n      dispatch({ type: 'UPDATE_USER_SUCCESS', payload: res })\r\n      toast.success('Information Updated')\r\n      dispatch({ type: 'FETCH_USER_START' })\r\n      fetch(`${server}get_users.php`)\r\n        .then((data) => data.json())\r\n        .then((data) => {\r\n          let fm = []\r\n          for (let x = 0; x < data.fm.length; x++) {\r\n            fm.push({ ...data.fm[x], qualification: [] })\r\n            for (let y = 0; y < data.qual.length; y++) {\r\n              if (data.fm[x].fm_id === data.qual[y].fm_id)\r\n                fm[x].qualification.push(data.qual[y])\r\n            }\r\n          }\r\n          dispatch({\r\n            type: 'FETCH_USER_SUCCESS',\r\n            payload: fm,\r\n          })\r\n        })\r\n        .catch((err) => {\r\n          dispatch({ type: 'FETCH_USER_FAILED', payload: err })\r\n          toast.error('Auto Fetching Failed. Refreshing Now...')\r\n          window.location.reload()\r\n        })\r\n    })\r\n    .catch((err) => {\r\n      toast.error('Update Failed')\r\n      dispatch({ type: 'UPDATE_USER_FAILED', payload: err })\r\n    })\r\n}\r\nexport const cancelUpdate = () => {\r\n  toast.info('Cancelled')\r\n  return { type: 'CANCEL_UPDATE' }\r\n}\r\n","import React from 'react'\r\nimport BoxmodelCss from './Boxmodel.module.css'\r\n// Redux\r\nimport { useDispatch } from 'react-redux'\r\nimport { deleteUser } from '../../redux/action'\r\nimport { oldUser } from '../../redux/action'\r\n\r\nconst RecordGen = ({ counter, user, toggleForm }) => {\r\n  const dispatch = useDispatch()\r\n  const triggerDelete = () => {\r\n    var answer = window.confirm('Are you sure you want to delete?')\r\n    if (answer) {\r\n      dispatch(deleteUser(user))\r\n    } else {\r\n      //some code\r\n    }\r\n  }\r\n  const triggerEdit = () => {\r\n    dispatch(oldUser(user))\r\n    toggleForm()\r\n  }\r\n  return (\r\n    <tr>\r\n      <td>{counter}</td>\r\n      <td>{user.fm_name}</td>\r\n      <td>{user.fm_address}</td>\r\n      <td>{user.fm_designation}</td>\r\n      <td>Rs. {user.fm_salary}</td>\r\n      <td>\r\n        {user.qualification.map((qual, j) => {\r\n          return <QualGen key={j} counter={j} qual={qual.degree_tittle} />\r\n        })}\r\n      </td>\r\n      <td>\r\n        {user.qualification.map((qual, j) => {\r\n          return <QualGen key={j} counter={j} qual={qual.year_of_passing} />\r\n        })}\r\n      </td>\r\n      <td>\r\n        {user.qualification.map((qual, j) => {\r\n          return <QualGen key={j} counter={j} qual={qual.institute_attended} />\r\n        })}\r\n      </td>\r\n      <td>\r\n        <div className={BoxmodelCss.btn}>\r\n          <i className=\"fa fa-pencil\" onClick={() => triggerEdit()}></i>\r\n          <i className=\"fa fa-trash\" onClick={() => triggerDelete()}></i>\r\n        </div>\r\n      </td>\r\n    </tr>\r\n  )\r\n}\r\n\r\nexport const QualGen = ({ qual, counter }) => {\r\n  let line = false\r\n  if (counter > 0) {\r\n    line = true\r\n  }\r\n  return (\r\n    <div\r\n      className={BoxmodelCss.qual}\r\n      style={line ? { borderTop: '1px solid lightgrey' } : null}\r\n    >\r\n      {/* {counter + 1}. &emsp; */}\r\n      {qual}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default RecordGen\r\n","import React from 'react'\r\nimport './spinner.scss'\r\n\r\nexport const SpinnerHOC =\r\n  (WrappedComponent) =>\r\n  ({ isLoading, ...otherProps }) =>\r\n    isLoading ? (\r\n      <div className=\"SpinnerOverlay\">\r\n        <div className=\"SpinnerContainer\" />\r\n      </div>\r\n    ) : (\r\n      <WrappedComponent {...otherProps}></WrappedComponent>\r\n    )\r\n\r\nexport const Spinner = () => {\r\n  return (\r\n    <div className=\"SpinnerOverlay\">\r\n      <div className=\"SpinnerContainer\" />\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport BoxmodelCss from './Boxmodel.module.css'\r\n// Components\r\nimport RecordGen from './RecordGen'\r\nimport { Spinner } from '../spinner/spinner'\r\n\r\nconst Boxmodel = ({ users, toggleForm, isLoading }) => {\r\n  return (\r\n    <div className={BoxmodelCss.body}>\r\n      <table>\r\n        <tr>\r\n          <th>#</th>\r\n          <th>Name</th>\r\n          <th>Address</th>\r\n          <th>Designation</th>\r\n          <th>Salary</th>\r\n          <th>Degree_Title</th>\r\n          <th>Year_of_Passing</th>\r\n          <th>Institute_Attended</th>\r\n          <th>Actions</th>\r\n        </tr>\r\n        {users.map((i, j) => (\r\n          <RecordGen\r\n            key={j}\r\n            user={users[j]}\r\n            counter={j + 1}\r\n            toggleForm={toggleForm}\r\n          />\r\n        ))}\r\n      </table>\r\n      {isLoading ? <Spinner /> : null}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Boxmodel\r\n","import React from 'react'\r\nimport './Form.css'\r\n\r\nconst QualificationGen = ({ qual, handleQual, index, handleRemoved }) => {\r\n  return (\r\n    <div className={`qual${qual.q_id}`}>\r\n      {index > 0 ? (\r\n        <div className={'addless'}>\r\n          <span className=\"span\" style={{ color: 'lightgrey' }}></span>\r\n          <span\r\n            className=\"span3\"\r\n            onClick={() => handleRemoved(index, qual.q_id)}\r\n          >\r\n            Remove\r\n          </span>\r\n          <hr className=\"hr\" />\r\n        </div>\r\n      ) : null}\r\n      <div className=\"row1\">\r\n        <label htmlFor=\"institute\">\r\n          <i className=\"fa fa-institution\"></i> Institute Attended\r\n        </label>\r\n        <input\r\n          type=\"text\"\r\n          id=\"institute\"\r\n          name=\"institute_attended\"\r\n          placeholder=\"Institute name ...\"\r\n          value={qual.institute_attended}\r\n          onChange={(e) => handleQual(e, index)}\r\n          required\r\n        />\r\n      </div>\r\n      <div className=\"row\">\r\n        <div className=\"col-50\">\r\n          <label htmlFor=\"egree\">\r\n            <i className=\"fa fa-graduation-cap\" aria-hidden=\"true\"></i> Degree\r\n            Title\r\n          </label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"degree\"\r\n            name=\"degree_tittle\"\r\n            placeholder=\"Degree title here ...\"\r\n            value={qual.degree_tittle}\r\n            onChange={(e) => handleQual(e, index)}\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"col-50\">\r\n          <label htmlFor=\"year\">\r\n            <i className=\"fa fa-calendar\" aria-hidden=\"true\"></i> Year of\r\n            Passing\r\n          </label>\r\n          <input\r\n            type=\"number\"\r\n            id=\"year\"\r\n            name=\"year_of_passing\"\r\n            placeholder=\"Year only ...\"\r\n            value={qual.year_of_passing}\r\n            onChange={(e) => handleQual(e, index)}\r\n            required\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default QualificationGen\r\n","import React from 'react'\r\nimport './Form.css'\r\n// Addons\r\nimport update from 'react-addons-update'\r\n// Redux\r\nimport { updateUser, cancelUpdate, addUser } from '../../redux/action'\r\nimport { connect } from 'react-redux'\r\n// Components\r\nimport QualificationGen from './QualificationGen'\r\nimport { Spinner } from '../spinner/spinner'\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  addUser: (user) => dispatch(addUser(user)),\r\n  updateUser: (user) => dispatch(updateUser(user)),\r\n  cancelUpdate: () => dispatch(cancelUpdate()),\r\n})\r\nconst initialQual = {\r\n  q_id: '',\r\n  institute_attended: '',\r\n  degree_tittle: '',\r\n  year_of_passing: '',\r\n}\r\nconst initialState = {\r\n  fm_name: '',\r\n  fm_salary: '',\r\n  fm_address: '',\r\n  fm_designation: '',\r\n  qualification: [initialQual],\r\n  counter: 1,\r\n  removedItem: [],\r\n}\r\nclass Form extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    if (this.props.oldUser) {\r\n      this.state = {\r\n        ...this.props.oldUser,\r\n        counter: this.props.oldUser.qualification.length,\r\n        removedItem: [],\r\n      }\r\n    } else {\r\n      this.state = initialState\r\n    }\r\n  }\r\n  handleChange = (event) => {\r\n    this.setState({ ...this.state, [event.target.name]: event.target.value })\r\n  }\r\n  handleQual = (event, index) => {\r\n    if (!this.state.qualification[index].q_id && this.props.oldUser) {\r\n      this.setState(\r\n        update(this.state, {\r\n          qualification: {\r\n            [index]: {\r\n              $set: {\r\n                ...this.state.qualification[index],\r\n                [event.target.name]: event.target.value,\r\n                q_id: String(\r\n                  parseInt(this.state.qualification[index - 1].q_id) + 1\r\n                ),\r\n              },\r\n            },\r\n          },\r\n        })\r\n      )\r\n    } else {\r\n      this.setState(\r\n        update(this.state, {\r\n          qualification: {\r\n            [index]: {\r\n              $set: {\r\n                ...this.state.qualification[index],\r\n                [event.target.name]: event.target.value,\r\n              },\r\n            },\r\n          },\r\n        })\r\n      )\r\n    }\r\n  }\r\n  handleSubmit = (event) => {\r\n    event.preventDefault()\r\n    this.props.oldUser\r\n      ? this.props.updateUser(this.state)\r\n      : this.props.addUser(this.state)\r\n    console.log(this.props.success)\r\n  }\r\n  cancelUpdate = () => {\r\n    if (this.props.oldUser) {\r\n      this.props.cancelUpdate()\r\n      this.props.toggleDatabase()\r\n    } else {\r\n      this.setState(initialState)\r\n    }\r\n  }\r\n  addCounter = () => {\r\n    // this.setState({ counter: this.state.counter + 1 })\r\n    this.setState((prevState) => ({\r\n      qualification: [...prevState.qualification, initialQual],\r\n    }))\r\n  }\r\n  handleRemoved = (index, id) => {\r\n    this.state.removedItem.push(id)\r\n    console.log(this.state.removedItem)\r\n    var array = [...this.state.qualification] // make a separate copy of the array\r\n    if (index !== -1) {\r\n      array.splice(index, 1)\r\n      this.setState({ qualification: array })\r\n    }\r\n  }\r\n  render() {\r\n    if (this.props.success) {\r\n      this.props.toggleDatabase()\r\n      this.setState(initialState)\r\n    }\r\n    return (\r\n      <div className=\"container\">\r\n        <form method=\"post\" onSubmit={this.handleSubmit}>\r\n          <div className=\"row\">\r\n            <div className=\"col-50\">\r\n              <h3>Personal Information</h3>\r\n              <label htmlFor=\"name\">\r\n                <i className=\"fa fa-user\"></i> Full Name\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                id=\"name\"\r\n                name=\"fm_name\"\r\n                placeholder=\"Your name here ...\"\r\n                value={this.state.fm_name}\r\n                onChange={this.handleChange}\r\n                required\r\n              />\r\n              <label htmlFor=\"address\">\r\n                <i className=\"fa fa-address-card-o\"></i> Address\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                id=\"address\"\r\n                name=\"fm_address\"\r\n                placeholder=\"Your address here ...\"\r\n                value={this.state.fm_address}\r\n                onChange={this.handleChange}\r\n                required\r\n              />\r\n              <label htmlFor=\"designation\">\r\n                <i className=\"fa fa-briefcase\"></i> Designation\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                id=\"designation\"\r\n                name=\"fm_designation\"\r\n                placeholder=\"Your designation here ...\"\r\n                value={this.state.fm_designation}\r\n                onChange={this.handleChange}\r\n                required\r\n              />\r\n              <label htmlFor=\"salary\">\r\n                <i className=\"fa fa-usd\" aria-hidden=\"true\"></i> Salary\r\n              </label>\r\n              <input\r\n                type=\"number\"\r\n                id=\"salary\"\r\n                name=\"fm_salary\"\r\n                placeholder=\"PKR\"\r\n                value={this.state.fm_salary}\r\n                onChange={this.handleChange}\r\n                required\r\n              />\r\n            </div>\r\n\r\n            <div className=\"col-50 second\">\r\n              <div className=\"qualification\">\r\n                <h3>Qualification</h3>\r\n              </div>\r\n\r\n              {this.state.qualification.map((qual, j) => {\r\n                return (\r\n                  <QualificationGen\r\n                    key={j}\r\n                    qual={qual}\r\n                    handleRemoved={this.handleRemoved}\r\n                    handleQual={this.handleQual}\r\n                    index={j}\r\n                  />\r\n                )\r\n              })}\r\n              <div className={'addmore'}>\r\n                <span\r\n                  className=\"span\"\r\n                  style={{ color: 'lightgrey' }}\r\n                  onClick={() => this.addCounter()}\r\n                >\r\n                  &#65291;\r\n                </span>\r\n                <span className=\"span2\" onClick={() => this.addCounter()}>\r\n                  Add More\r\n                </span>\r\n                <hr className=\"hr\" onClick={() => this.addCounter()} />\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <label className=\"lastlabel\">\r\n            <input type=\"checkbox\" name=\"sameadr\" required />{' '}\r\n            <span>\r\n              I hereby verified the above information is correct and verified as\r\n              per Terms & Conditions of Faculty Directory of Multi University\r\n            </span>\r\n          </label>\r\n          <div className=\"cancel\">\r\n            <input\r\n              type=\"submit\"\r\n              value={\r\n                this.props.oldUser ? `Update In database` : `Save in database`\r\n              }\r\n              className=\"btn \"\r\n            />\r\n            <button\r\n              className=\"cancelbtn\"\r\n              type=\"button\"\r\n              onClick={() => this.cancelUpdate()}\r\n            >\r\n              {this.props.oldUser ? `Cancel` : `Clear All`}\r\n            </button>\r\n          </div>\r\n        </form>\r\n        {this.props.isLoading ? <Spinner /> : null}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(Form)\r\n","import React from 'react'\r\nimport TogglesCss from './Toggles.module.css'\r\n\r\nconst Toggles = ({ form, database, oldUser, toggleDatabase, toggleForm }) => {\r\n  return (\r\n    <div className={TogglesCss.toggles}>\r\n      <button\r\n        onClick={() => toggleForm()}\r\n        style={\r\n          form\r\n            ? {\r\n                background: 'linear-gradient(360deg, #BA54F5 0%, #E14ECA 100%)',\r\n                color: 'white',\r\n              }\r\n            : null\r\n        }\r\n      >\r\n        {!oldUser ? 'Add Faculty Member' : 'Update Faculty Member'}\r\n      </button>\r\n      <button\r\n        onClick={() => toggleDatabase()}\r\n        style={\r\n          database\r\n            ? {\r\n                background: 'linear-gradient(360deg, #BA54F5 0%, #E14ECA 100%)',\r\n                color: 'white',\r\n              }\r\n            : null\r\n        }\r\n      >\r\n        {'Database'}\r\n      </button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Toggles\r\n","import React from 'react'\r\nimport TitleBarCss from './titlebar.module.css'\r\n\r\nconst TitleBar = ({\r\n  database,\r\n  searchValue,\r\n  onSearchChange,\r\n  clearSearchValue,\r\n  form,\r\n}) => {\r\n  return (\r\n    <div>\r\n      {database ? (\r\n        <div className={TitleBarCss.titlebar}>\r\n          <h5>Faculty Database </h5>\r\n          <div className={TitleBarCss.searchBox_fakeInput}>\r\n            <div className={TitleBarCss.searchBox_inputWrapper}>\r\n              <input\r\n                id=\"myInput\"\r\n                type=\"text\"\r\n                className={`${TitleBarCss.form_control} ${TitleBarCss.searchBox_input} ${TitleBarCss.js_searchBox_input}`}\r\n                value={searchValue}\r\n                onChange={onSearchChange}\r\n                placeholder=\"Search\"\r\n              />\r\n            </div>\r\n            <div className={TitleBarCss.searchBox_clearWrapper}>\r\n              <span\r\n                style={\r\n                  !searchValue ? { display: 'none' } : { display: 'block' }\r\n                }\r\n                className={`${TitleBarCss.searchBox_clear} ${TitleBarCss.js_clearSearchBox}`}\r\n                onClick={() => clearSearchValue()}\r\n              >\r\n                <i className=\"fa fa-times-circle\"></i>\r\n              </span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ) : null}\r\n      {form ? (\r\n        <div className={TitleBarCss.titlebar}>\r\n          <h5>\r\n            Faculty Directory for Multi Universities &ensp;\r\n            <span className={TitleBarCss.tooltip}>\r\n              <span className={TitleBarCss.tooltiptext}>\r\n                <ul>\r\n                  <h5>Instructions</h5>\r\n                  <li>All fields are mandatory.</li>\r\n                  <li>\r\n                    As Per given instructions Tables are in One To Many Relation\r\n                  </li>\r\n                  <li>\r\n                    Thus, You can add more than one Qualification box, By\r\n                    clicking Add More\r\n                  </li>\r\n                  <li>One Qualification Box field's are mandatory </li>\r\n                  <li>\r\n                    You can Remove Specific Qualification field. Click on Edit\r\n                    and remove the field\r\n                  </li>\r\n                  <li>\r\n                    Also, You can update even signle qualification field or you\r\n                    can delete one qualification field\r\n                  </li>\r\n                </ul>\r\n              </span>\r\n              &#9432;\r\n            </span>\r\n          </h5>\r\n        </div>\r\n      ) : null}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default TitleBar\r\n","import React from 'react'\r\nimport AppCss from './App.module.css'\r\n\r\n// Redux\r\nimport { getUser } from './redux/action'\r\nimport { connect } from 'react-redux'\r\n\r\n// Components\r\nimport Boxmodel from './components/Boxmodel/Boxmodel'\r\nimport Form from './components/Form/Form'\r\nimport Toggles from './components/Toggles/Toggles'\r\nimport TitleBar from './components/titlebar/Titlebar'\r\n\r\nconst mapStateToProps = (state) => ({\r\n  users: state.userReducer.users,\r\n  qual: state.userReducer.qual,\r\n  oldUser: state.userReducer.oldUser,\r\n  isLoading: state.userReducer.isLoading,\r\n  success: state.userReducer.success,\r\n})\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  getUser: () => dispatch(getUser()),\r\n})\r\n\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      database: false,\r\n      form: false,\r\n      searchValue: '',\r\n    }\r\n  }\r\n  componentDidMount() {\r\n    this.props.getUser()\r\n  }\r\n  toggleDatabase = () => {\r\n    this.setState({\r\n      database: !this.state.database,\r\n      form: false,\r\n      searchValue: '',\r\n    })\r\n  }\r\n  toggleForm = () => {\r\n    this.setState({\r\n      database: false,\r\n      form: !this.state.form,\r\n    })\r\n  }\r\n  onSearchChange = (event) => {\r\n    this.setState({ searchValue: event.target.value })\r\n  }\r\n  clearSearchValue = () => {\r\n    this.setState({ searchValue: '' })\r\n  }\r\n\r\n  render() {\r\n    const { form, database, searchValue } = this.state\r\n    const { oldUser, users, isLoading, success } = this.props\r\n    // console.log(users[0].qualification[0].degree_tittle)\r\n    const filteredUsers = users.filter((users) => {\r\n      return (\r\n        users.fm_name.toLowerCase().includes(searchValue.toLowerCase()) ||\r\n        users.fm_address.toLowerCase().includes(searchValue.toLowerCase()) ||\r\n        users.fm_designation\r\n          .toLowerCase()\r\n          .includes(searchValue.toLowerCase()) ||\r\n        users.fm_salary.toLowerCase().includes(searchValue.toLowerCase()) ||\r\n        users.qualification.includes(searchValue.toLowerCase()) ||\r\n        users.qualification[0].degree_tittle\r\n          .toLowerCase()\r\n          .includes(searchValue.toLowerCase()) ||\r\n        users.qualification[0].year_of_passing\r\n          .toLowerCase()\r\n          .includes(searchValue.toLowerCase()) ||\r\n        users.qualification[0].institute_attended\r\n          .toLowerCase()\r\n          .includes(searchValue.toLowerCase())\r\n      )\r\n    })\r\n    return (\r\n      <div className={AppCss.App}>\r\n        <div className={AppCss.container}>\r\n          <Toggles\r\n            form={form}\r\n            database={database}\r\n            oldUser={oldUser}\r\n            toggleDatabase={this.toggleDatabase}\r\n            toggleForm={this.toggleForm}\r\n          />\r\n          <div className={AppCss.container2}>\r\n            <TitleBar\r\n              database={database}\r\n              form={form}\r\n              searchValue={searchValue}\r\n              onSearchChange={this.onSearchChange}\r\n              clearSearchValue={this.clearSearchValue}\r\n            />\r\n\r\n            {database ? (\r\n              <Boxmodel\r\n                toggleForm={this.toggleForm}\r\n                users={filteredUsers}\r\n                isLoading={isLoading}\r\n              />\r\n            ) : null}\r\n            {form ? (\r\n              <Form\r\n                oldUser={oldUser}\r\n                toggleDatabase={this.toggleDatabase}\r\n                isLoading={isLoading}\r\n                success={success}\r\n              />\r\n            ) : null}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App)\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","const initialUserState = {\r\n  users: [],\r\n  isLoading: false,\r\n  error: null,\r\n  message: null,\r\n  oldUser: null,\r\n  success: false,\r\n}\r\nexport const userReducer = (state = initialUserState, action) => {\r\n  switch (action.type) {\r\n    //Start Cases\r\n    case 'FETCH_USER_START':\r\n      return Object.assign({}, state, {\r\n        error: null,\r\n        oldUser: null,\r\n        success: false,\r\n      })\r\n    case 'ADD_USER_IN_DB_START':\r\n    case 'DELETE_USER':\r\n    case 'UPDATE_USER_START':\r\n      return Object.assign({}, state, {\r\n        isLoading: true,\r\n        error: null,\r\n        oldUser: null,\r\n        success: false,\r\n      })\r\n    //Success Cases\r\n    case 'FETCH_USER_SUCCESS':\r\n      return Object.assign({}, state, {\r\n        users: action.payload,\r\n        isLoading: false,\r\n        error: null,\r\n        oldUser: null,\r\n        success: false,\r\n      })\r\n    case 'ADD_USER_IN_DB_SUCCESS':\r\n    case 'DELETE_USER_SUCCESS':\r\n    case 'UPDATE_USER_SUCCESS':\r\n      return Object.assign({}, state, {\r\n        isLoading: false,\r\n        message: action.payload,\r\n        error: null,\r\n        oldUser: null,\r\n        success: true,\r\n      })\r\n\r\n    //Failed Cases\r\n    case 'FETCH_USER_FAILED':\r\n    case 'ADD_USER_IN_DB_FAILED':\r\n    case 'DELTE_USER_FAILED':\r\n      return Object.assign({}, state, {\r\n        isLoading: false,\r\n        error: action.payload,\r\n        oldUser: null,\r\n        success: false,\r\n      })\r\n\r\n    // Edit Case\r\n    case 'EDIT_USER':\r\n      return Object.assign({}, state, { oldUser: action.payload })\r\n    case 'CANCEL_UPDATE':\r\n      return Object.assign({}, state, { oldUser: null })\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","import { createStore, applyMiddleware, combineReducers } from 'redux'\r\nimport thunkMiddleware from 'redux-thunk'\r\nimport { createLogger } from 'redux-logger'\r\n\r\nimport { userReducer } from './reducer.js'\r\n\r\nconst rootReducers = combineReducers({ userReducer })\r\n\r\nconst logger = createLogger()\r\n\r\nexport const store = createStore(\r\n  rootReducers,\r\n  applyMiddleware(thunkMiddleware, logger)\r\n)\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.css'\r\nimport App from './App'\r\nimport reportWebVitals from './reportWebVitals'\r\nimport { Provider } from 'react-redux'\r\nimport { store } from './redux/store'\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n)\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals()\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"titlebar\":\"titlebar_titlebar__1NbU1\",\"searchBox_fakeInput\":\"titlebar_searchBox_fakeInput__1tYLQ\",\"searchBox_inputWrapper\":\"titlebar_searchBox_inputWrapper__1nse0\",\"searchBox_clearWrapper\":\"titlebar_searchBox_clearWrapper__2yNOw\",\"searchBox_input\":\"titlebar_searchBox_input__nSNys\",\"searchBox_clear\":\"titlebar_searchBox_clear__2jIS8\",\"searchBox_clearInput\":\"titlebar_searchBox_clearInput__4-i_X\",\"tooltip\":\"titlebar_tooltip__v_37A\",\"tooltiptext\":\"titlebar_tooltiptext__1PjbA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"boxmodel\":\"Boxmodel_boxmodel__1zxCf\",\"body\":\"Boxmodel_body__3V028\",\"btn\":\"Boxmodel_btn__1rJEt\",\"qual\":\"Boxmodel_qual__3xb06\"};"],"sourceRoot":""}